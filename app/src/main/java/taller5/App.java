/*
 * This source file was generated by the Gradle 'init' task
 */
package taller5;
import java.util.Scanner;
import java.text.DecimalFormat;

public class App {
    
    public static void main(String[] args) {
        
        try {
            
            System.out.println(Intentos_aleatorio());
            System.out.println(Simular_ventas());
            System.out.println(Calcular_empaque());
            System.out.println(Jugar_21(6));
        } 
        catch (Exception e) {
            System.out.println(e.toString());
        }
    }


    /*
        1.	Desarrolle un algoritmo e impleméntelo en Java que: le pida al usuario un número entero positivo 
        entre 1000 y 9999. En un ciclo genere números de manera aleatoria y cuente los intentos que hizo antes 
        de hallar el número exactamente.
    */ 

    public static int Intentos_aleatorio (){

        try {

            //Definir variables
            int nro_teclado = 0, min = 1000, max = 9999, alea = 0, intentos = 0;

            Scanner teclado = new Scanner(System.in);
            System.out.println("Ingrese un número entre 1000 y 9999: ");
            nro_teclado = teclado.nextInt();

            //Condición rango 
            if(nro_teclado < min || nro_teclado > max)
                return -1;

            //Ciclo do-while
            do{
                alea = (int)(Math.random()*(max-min+1)+min);
                    intentos++;
            }
            while(alea != nro_teclado);
            
            //Retornar 
            return intentos; 
        } 
        catch (Exception e) {
            return -1;
        }
    }

    /* 
        2.	Se requiere una función en java que simule las ventas de tres años para un almacén. Para cada año, deberá generar 
        un aleatorio para cada mes hasta completar los 12 meses. La función se llamará Simular_ventas, y debe retornar un String 
        al final que muestre las ventas de cada año, así:
        
            Año 1
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###
            Total ventas Año 1:  $##.###.###
            
            Año 2
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###
            Total ventas Año 2: $##.###.###
            
            Año 3
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###

            Total ventas Año 3: $##.###.###
            
            Investigue sobre la clase DecimalFormat para mostrar bien la salida. 
            import java.text.DecimalFormat;
            DecimalFormat form_pesos = new DecimalFormat("$#,###.00");
    */

    public static String Simular_ventas(){

        try {

            //Variables
            final byte año_min = 1, año_max = 3, mes_min = 1, mes_max = 12;
            final short alea = 10000;
            long ventas_mes = 0, sum_ventas = 0;
            String resultado = "", ventas_form = "", total_año = "";
            DecimalFormat Fventas = new DecimalFormat("$#,###.00");

            //Ciclo for año
            for(byte año = año_min; año <= año_max; año++){
                resultado += "Año " + año + "\n";
                sum_ventas = 0;

                //Ciclo for mes
                for(byte mes = mes_min; mes <= mes_max; mes++){
                    
                    ventas_mes =  (long)(Math.random()*alea);
                    ventas_form = Fventas.format(ventas_mes);
                    resultado += "Ventas Mes " + mes + ": " + ventas_form + "\n";
                    sum_ventas += ventas_mes;
                }

                //Total ventas al año
                total_año =  Fventas.format(sum_ventas);
                resultado += "Total ventas Año " + año + ": " + total_año + "\n\n";
            }

            return resultado;
        } 
        catch (Exception e) {
            return "Error: " + e.toString();
        }
    }

    /*  
        3.	En una fábrica se tiene el siguiente patrón de empaque: En una estiba(o pallet) caben 16  cajas y en cada caja, 
        caben 30 bombillas. Desarrolle una función que se llame: Calcular_empaque que: reciba como argumento la cantidad de 
        bombillas que se deben empacar y a partir de allí: calcule cuántas cajas necesita, cuántas estibas o pallets necesita. 
        Luego escriba lo siguiente: 

        Para ### bombillas, se necesitan ## cajas y ## pallets. Se quedan ### bombillas sin empacar. Se empacará así:

        Pallet 1 --> Caja1, Caja2……,Caja16
        Pallet2 -->  Caja17, Caja18…..Caja 32
        .
        Pallet n -- > Caja m, caja m+1…..
        
        La función retornará un texto, con la información anterior. Pruebe la función llamándola desde el programa principal: solicite al usuario el número de bombillas e invoque la función para imprimir en el main, los resultados.
    */

    public static String Calcular_empaque(){

        try {

            //Variables
            int nro_bombillas = 0, cajas_necesarias = 0, pallets_necesarios = 0, bombillas_empacadas = 0, bombillas_sin_empacar = 0;
            final byte bombillas_x_caja = 30, cajas_x_pallet = 16;
            int caja_numero = 1;
            String resultado = "";

            //Inicialización de objetos y lectura de datos
            Scanner teclado = new Scanner(System.in);
            System.out.println("Digíte un número de bombillas");
            nro_bombillas = teclado.nextInt();

            //Calcular número de cajas necesarias 
            cajas_necesarias = nro_bombillas/bombillas_x_caja;
            if (nro_bombillas % bombillas_x_caja != 0) 
                cajas_necesarias++;

            //Calcular número de pallets
            pallets_necesarios = cajas_necesarias/cajas_x_pallet;
            if (cajas_necesarias % cajas_x_pallet != 0) 
                pallets_necesarios++;
            
            //Calcular bombillas sin empacar 
            bombillas_sin_empacar = nro_bombillas % bombillas_x_caja;

            resultado += "Para " + nro_bombillas + " bombillas, se necesitan " 
            + cajas_necesarias + " cajas y " + pallets_necesarios + " pallets. Se quedan " 
            + bombillas_sin_empacar + " bombillas sin empacar." + "\n\n";

            //Ciclo
            for(int pallet = 1; pallet <= pallets_necesarios; pallet++){
                resultado += "Pallet " + pallet + " --> ";

                for(int caja = 1; caja <= cajas_x_pallet && caja_numero <= cajas_necesarias; caja++){
                    resultado += "Caja" + caja_numero;

                    if (caja_numero < cajas_necesarias) {
                        resultado += ", "; 
                    }
                    caja_numero++;
                }
                resultado += "\n";
            }
            return resultado;
        } 
        catch (Exception e) {
            return "Error: " + e.toString();        
        }
    }

    /* 
    

        4.	En un juego, cada jugador tiene 3 intentos para sacar cartas de una baraja. Las cartas van numeradas entre 1 y 10. 
        Una función Jugar_21, deberá simular el juego para una cantidad de usuarios que enviará el usuario desde el main entre 1 y 6.

        Para cada uno de los jugadores, el programa le calculará 3 cartas al azar y al final imprimirá el juego para cada jugador basado en las siguientes reglas: 
        
        Si saca 21 exactos: juego perfecto
        Si saca más de 21: se pasó
        Si saca menos de 21: faltaron puntos

        La función deberá imprimir los puntos de cada jugador junto con la regla anterior, como muestra el ejemplo:

        Jugador X, puntos 21 -- > juego perfecto
        Jugador Y, puntos 26 -- > se pasó
        .
        .
    */

   public static String Jugar_21 (int cant_usuarios){

        if(cant_usuarios < 1 || cant_usuarios > 6)
            return "Error";

        try {

            int sum_cartas = 0, alea = 0;
            String resultado_txt = "";
            

            for(int juego = 1; juego <= cant_usuarios; juego++){

                alea = (int)(Math.random()*(10-1+1)+1);
                
                int carta_1 = alea;
                int carta_2 = alea;
                int carta_3 = alea;

                sum_cartas = carta_1 + carta_2 + carta_3;

                if(sum_cartas == 21)
                    resultado_txt += " El jugador " + juego + ", puntos " + sum_cartas + " - > juego perfecto \n";
                else if(sum_cartas > 21)
                    resultado_txt +=  " El jugador " + juego + ", puntos " + sum_cartas + " - > se pasó \n";
                else if(sum_cartas < 21)
                    resultado_txt +=  " El jugador " + juego + ", puntos " + sum_cartas + " - > faltaron puntos \n";
            }
            return resultado_txt;
        } 
        catch (Exception e) {
            return "Error";
        }

    }
}
